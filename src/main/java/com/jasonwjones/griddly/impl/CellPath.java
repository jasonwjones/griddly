package com.jasonwjones.griddly.impl;

/**
 * Lightweight and immutable object representing the location of a cell within a
 * Grid.
 * 
 * POSSIBLE TODO: Inline to AutoSizingTreeGrid
 * @author Jason W. Jones
 * 
 */
public class CellPath implements Comparable<CellPath> {

	private int row;
	private int column;

	public CellPath(int row, int column) {
		this.row = row;
		this.column = column;
	}

	public int getRow() {
		return row;
	}

	public int getColumn() {
		return column;
	}

	/**
	 * Default hashCode() method generated by Eclipse.
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + column;
		result = prime * result + row;
		return result;
	}

	/**
	 * Default equals() method generated by Eclipse.
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof CellPath)) {
			return false;
		}
		CellPath other = (CellPath) obj;
		if (column != other.column) {
			return false;
		}
		if (row != other.row) {
			return false;
		}
		return true;
	}

	public int compareTo(CellPath o) {
		if (row - o.row == 0) {
			return column - o.column;
		} else {
			return row - o.row;
		}
	}
	
	@Override
	public String toString() {
		return "<CellPath: " + row + ", " + column + ">";
	}

}
